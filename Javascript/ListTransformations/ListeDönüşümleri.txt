### LİSTE DÖNÜŞÜMLERİ ##########################################################

--- Tanım ----------------------------------------------------------------------

Frontend tarafında sürekli API'lerden gelen verilerle çalışırız. Bu veriler her 
zaman istediğimiz formatta olmayabiliyor. Bu sebeple biz de liste dönüşüm 
tekniklerini kullanarak frontend'in ihtiyaçlarına göre verileri 
şekillendiririz. 
--------------------------------------------------------------------------------

--- İç İçe Alma (Nesting) ------------------------------------------------------

const game = {};
game['suspects'] = [];
game.suspects.push(        
    {
        name: "Rusty",
        color: "orange"
    },
    {
        name: "Miss Scarlet",
        color: "red"
    },
);

yerine;

const game = {
    'suspects' : [
        {
            name: "Rusty",
            color: "orange"
        },
        {
            name: "Miss Scarlet",
            color: "red"
        }
    ]
};

kullanılabilir.
--------------------------------------------------------------------------------

--- Döngü Alıştırmaları --------------------------------------------------------

const game = {
    'suspects' : [
        {
            name: "Rusty",
            color: "orange"
        },
        {
            name: "Miss Scarlet",
            color: "red"
        }
    ]
};

var gameLoop = function(){
    for (let i = 0; i < game.suspects.length; i++){
        for (let key in game.suspects[i]) {
            if (game.suspects[i][key] === "Rusty") {
                console.log("Found em");
            } else {
                console.log("Next time");
            }
        }
    }
}

gameLoop();

Bu alıştırmada game nesnesi içerisindeki suspects property'sine atanmış dizi 
içerisindeki iki nesnenin property'lerine nasıl erişeceğimizi görüyoruz.
--------------------------------------------------------------------------------
################################################################################