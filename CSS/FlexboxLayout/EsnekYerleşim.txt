### ESNEK YERLEŞİM (FLEXBOX LAYOUT) ############################################

Detaylı bilgi için => https://css-tricks.com/snippets/css/a-guide-to-flexbox/

--- Tanım ----------------------------------------------------------------------
Bir sayfanın öğelerini ekrana olabildiğince düzgün yerleştirmek için kullanılan 
bir sistemdir.

Esnek yerleşimin arkasındaki ana fikir, kapsayıcı bloğa mevcut alanı en iyi 
şekilde doldurmak için (çoğunlukla her tür görüntüleme cihazına ve ekran 
boyutuna uyum sağlamak için) öğelerinin genişliğini/yüksekliğini (ve sırasını) 
değiştirme yeteneği vermektir. Kapsayıcı blok, öğeleri mevcut boş alanı
dolduracak şekilde genişletir veya taşmayı önlemek için küçültür.

Şu anda neredeyse her tarayıcı flexbox sistemini desteklemektedir. Sayfadaki 
yerleşimleri ayarlamak için bu yapı tavsiye ediliyor.

Öğeleri yerleştirmek için bu sisteme alternatif olarak bir de grid sistemi var
fakat grid sisteminin tarayıcı desteği %80 civarlarında o sebeple şu an için
tavsiye edilmiyor.

Nasıl ki float özelliğinde bir elemanın kendisi sağa veya sola 
konumlandırılıyorsa flexbox'da ise kapsayıcı blok, elemanlarını kontrol eder. 
Yani flexbox'ta olay kapsayıcı blok içerisindeki elemanları konumlandırma ile 
ilgilidir. Bu sebeple display: flex; özelliği kapsayıcı bloğa yani
konumlandırılmak istenen elemanların parent'ına yazılır.
--------------------------------------------------------------------------------

--- Kullanım Şekli -------------------------------------------------------------
HTML:
<div class="flex-container">
  <div class="box-1">1</div>
  <div class="box-2">2</div>
  <div class="box-3">3</div>
</div>

CSS:
.flex-container {
display: flex;
width: 100%;
border: 1px solid black;
}

.box-1 {
border: 1px solid black;
color: white;
background-color: blue;
height: 150px;
width: 300px;
}

.box-2 {
border: 1px solid black;
color: white;
background-color: red;
height: 100px;
width: 300px;
}

.box-3 {
border: 1px solid black;
color: white;
background-color: green;
height: 200px;
width: 100px;
}
--------------------------------------------------------------------------------

--- flex-direction -------------------------------------------------------------
Flexbox içerisindeki elemanların hangi yöne doğru sıralanacağını; diğer bir
değişle içeriğin hangi yöne doğru akacağını belirler. Kapsayıcı bloğa eklenir.

flex-direction: row;            => Varsayılan yöndür. Soldan sağa doğru çalışır.

flex-direction: row-reverse;    => Sağdan sola doğru çalışır.

flex-direction: column;         => Yukarıdan aşağıya doğru çalışır.

flex-direction: column-reverse; => Aşağıdan yukarıya doğru çalışır.
--------------------------------------------------------------------------------

--- justify-content ------------------------------------------------------------
Flexbox içerisindeki elemanların ana yönde (flex-direction) nasıl
konumlanacağını belirler. Kapsayıcı bloğa eklenir.

justify-content: flex-start;    => Varsayılan konumlandırmadır. Tüm elemanlar 
ana yönün başlangıcında boyutları ölçüsünde aralarında boşluk olmayacak şekilde
sıralanır.

justify-content: flex-end;      => Tüm elemanlar ana yönün sonunda boyutları
ölçüsünde aralarında boşluk olmayacak şekilde sıralanır.

justify-content: center;        => Tüm elemanlar ana yönün ortasında boyutları
ölçüsünde aralarında boşluk olmayacak şekilde sıralanır.

justify-content: space-between; => İlk eleman ana yönün başlangıcına, son 
eleman ise ana yönün sonuna yapışır. Aradaki elemanlar arasında eşit ölçüde 
boşluk bırakılır.

justify-content: space-around;  => Tüm elemanlar aralarında eşit boşluk olacak 
şekilde sıralanır. Ana yönün başlangıcıyla ilk eleman arasında, ana yönün 
sonuyla son eleman arasında da diğer elemanların arasındakinden farklı ölçüde 
bir boşluk olur.

justify-content: space-evenly;  => Tüm elemanlar aralarında eşit boşluk olacak 
şekilde sıralanır. İlk elemanla ana yönün başlangıcı arasında veya son elemanla 
ana yönün sonu arasında da diğer elemanlar arasındaki kadar boşluk olur. Yani 
tüm boşluklar eşit olur.
--------------------------------------------------------------------------------

--- align-items ----------------------------------------------------------------
Flexbox içerisindeki elemanların çapraz yönde (flex-direction) nasıl
konumlanacağını belirler. Kapsayıcı bloğa eklenir.

align-items: flex-start; => Tüm elemanlar çapraz yönün başlangıcında boyutları
ölçüsünde sıralanır.

align-items: flex-end;   => Tüm elemanlar çapraz yönün sonunda boyutları
ölçüsünde sıralanır.

align-items: center;     => Tüm elemanlar çapraz yönün ortasında boyutları
ölçüsünde sıralanır.

align-items: baseline;   => Tüm elemanların içeriklerine (örneğin; elemanların 
içindeki bir yazının alt çizgisi) göre hizalanır.

align-items: stretch;    => Varsayılan konumlandırmadır. Tüm elemanlar çapraz 
yönün başlangıcına ve sonuna doğru genişleyerek ekranı kaplar.
--------------------------------------------------------------------------------

--- justify-self ---------------------------------------------------------------
Flexbox içerisindeki elemanlardan bu özelliğin eklendiği elemanın ana yönde
(flex-direction) nasıl konumlanacağını belirler. Elemanlara eklenir.
--------------------------------------------------------------------------------

--- align-self -----------------------------------------------------------------
Flexbox içerisindeki elemanlardan bu özelliğin eklendiği elemanın çapraz yönde
(flex-direction) nasıl konumlanacağını belirler. Elemanlara eklenir.
--------------------------------------------------------------------------------

--- order ----------------------------------------------------------------------
Flexbox içerisindeki elemanlardan bu özelliğin eklendiği elemanın ana yönde
hangi sırada konumlanacağını belirler. Elemanlara eklenir. order: 7; şeklinde 
sayısal değerler alır. Yüksek değer ana yöne göre önce sıralanır.
--------------------------------------------------------------------------------

--- Detaylar -------------------------------------------------------------------

--------------------------------------------------------------------------------
################################################################################